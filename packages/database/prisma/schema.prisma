generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum ClientStatus {
  ACTIVE
  INACTIVE
}

enum ProductType {
  PHYSICAL_GOOD
  SERVICE
}

enum InvoiceStatus {
  DRAFT
  PENDING
  PAID
  CANCELLED
  PARTIALLY_PAID
}

enum PaymentMethod {
  CASH
  CHECK
  BANK_TRANSFER
  WIRE_TRANSFER
  OTHER
}

enum PaymentProvider {
  MANUAL
}

enum ActivityType {
  // Invoice Activities
  INVOICE_CREATED
  INVOICE_UPDATED
  INVOICE_SENT
  INVOICE_PAID

  INVOICE_CANCELLED

  // Client Activities
  CLIENT_CREATED
  CLIENT_UPDATED
  CLIENT_DELETED

  // Payment Activities
  PAYMENT_RECEIVED
  PAYMENT_CANCELLED
  PAYMENT_REFUNDED

  // Product Activities
  PRODUCT_CREATED
  PRODUCT_UPDATED
  PRODUCT_DELETED

  // System Activities
  USER_PROFILE_UPDATED
  COMPANY_UPDATED
}

enum ActivityPriority {
  LOW // Product updates, profile changes
  MEDIUM // Client changes, invoice updates
  HIGH // Payments, invoice status changes
  CRITICAL // System issues, security events
}

model User {
  // Better-auth
  id            String    @id
  name          String
  email         String
  emailVerified Boolean   @map("email_verified")
  image         String?
  createdAt     DateTime  @map("created_at")
  updatedAt     DateTime  @map("updated_at")
  sessions      Session[]
  accounts      Account[]

  // System
  role Role @default(USER)

  onboardingCompleted Boolean @default(false) @map("onboarding_completed")
  timezone            String? @db.VarChar(30)

  deleted   Boolean   @default(false)
  deletedAt DateTime? @map("deleted_at")

  company      Company?      @relation("CompanyOwner")
  paymentTerms PaymentTerm[]
  clients      Client[]
  taxes        Tax[]
  products     Product[]
  invoices     Invoice[]
  activities   Activity[]
  payments     Payment[]

  @@unique([email])
  @@map("user")
}

model Company {
  id     String @id @default(uuid()) @db.Uuid
  userId String @map("user_Id")
  user   User   @relation("CompanyOwner", fields: [userId], references: [id], onDelete: Cascade)

  name String @db.VarChar(255)

  // Address
  addressLine1 String  @map("address_line_1") @db.VarChar(255)
  addressLine2 String? @map("address_line_2") @db.VarChar(255)
  city         String  @db.VarChar(30)

  state String @db.VarChar(30)

  country String @db.VarChar(2)

  postalCode String @db.VarChar(15)

  // Optional business details
  taxId   String? @map("tax_number") @db.VarChar(30) // VAT, GST etc.
  email   String? @db.VarChar(100)
  phone   String? @db.VarChar(20)
  website String? @db.VarChar(255)
  logoUrl String? @map("logo_url") @db.VarChar(255)

  defaultCurrency String @map("default_currency") @db.VarChar(10) //4217 code

  // Business settings
  defaultInvoiceNote String? @map("default_invoice_note") @db.Text

  // Invoice numbering
  nextInvoiceNumber Int    @default(1) @map("next_invoice_number")
  invoicePrefix     String @map("invoice_prefix") @db.VarChar(10)

  // System
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([userId])
  @@index([userId])
  @@map("company")
}

model PaymentTerm {
  id     String @id @default(uuid()) @db.Uuid
  userId String @map("user_Id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Payment term details

  numberOfDays Int @map("number_of_days")

  isDefault Boolean @default(false) @map("is_default")
  isActive  Boolean @default(true) @map("is_active")

  // System
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([userId, isDefault])
  @@index([userId, isActive])
  @@map("payment_term")
}

model Client {
  id     String @id @default(uuid()) @db.Uuid
  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  name String @db.VarChar(255)

  // Contact information
  email             String @db.VarChar(100)
  contactPersonName String @map("contact_person_name") @db.VarChar(50)
  phone             String @db.VarChar(20)

  // Billing Address (Required)
  billingAddressLine1 String  @map("billing_address_line_1") @db.VarChar(255)
  billingAddressLine2 String? @map("billing_address_line_2") @db.VarChar(255)
  billingCity         String  @map("billing_city") @db.VarChar(50)

  billingState      String @map("billing_state") @db.VarChar(50)
  billingCountry    String @map("billing_country") @db.VarChar(2)
  billingPostalCode String @map("billing_postal_code") @db.VarChar(15)

  // Shipping Address (Optional - defaults to billing)
  shippingAddressLine1 String? @map("shipping_address_line_1")
  shippingAddressLine2 String? @map("shipping_address_line_2")
  shippingCity         String? @map("shipping_city") @db.VarChar(50)

  shippingState String? @map("shipping_state") @db.VarChar(50)

  shippingCountry String? @map("shipping_country") @db.VarChar(2) //3166 alpah-2

  shippingPostalCode    String? @map("shipping_postal_code") @db.VarChar(15)
  shippingSameAsBilling Boolean @map("shipping_same_as_billing")

  // Optional
  taxId   String? @map("tax_id") @db.VarChar(30)
  website String? @db.VarChar(100)

  // Analytics 
  invoiceCount      Int     @default(0) @map("invoice_count")
  totalBilledAmount Decimal @default(0) @map("total_billed_amount") @db.Decimal(12, 2)

  // Status
  isActive Boolean @map("is_active")

  // System 
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  invoices Invoice[]

  // Constraints
  @@unique([userId, email])
  @@index([userId, isActive])
  @@index([userId, name])
  @@map("client")
}

model Product {
  id     String @id @default(uuid()) @db.Uuid
  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Details
  type        ProductType
  name        String      @db.VarChar(100)
  description String?     @db.Text

  // Pricing
  unitPrice Decimal @map("unit_price") @db.Decimal(12, 2)

  // Status
  isActive Boolean @default(true) @map("is_active")

  // System
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([userId, isActive])
  @@index([userId, type])
  @@map("product")
}

model Tax {
  id     String @id @default(uuid()) @db.Uuid
  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  name      String  @db.VarChar(50)
  rate      Decimal @db.Decimal(5, 4)
  isDefault Boolean @default(false) @map("is_default")
  isActive  Boolean @default(true) @map("is_active")

  // System 
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([userId, isDefault])
  @@unique([userId, name])
  @@index([userId, isActive])
  @@map("tax")
}

model Invoice {
  id       String @id @default(uuid()) @db.Uuid
  userId   String @map("user_id")
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  clientId String @map("client_id") @db.Uuid
  client   Client @relation(fields: [clientId], references: [id], onDelete: Cascade)

  // Essential Components
  invoiceNumber String        @map("invoice_number") @db.VarChar(50)
  status        InvoiceStatus
  issueDate     DateTime      @map("issue_date")
  dueDate       DateTime      @map("due_date")
  currency      String        @db.VarChar(10)

  // Payment terms
  paymentTermText String @map("payment_term_text") @db.VarChar(20)

  // Financial calculations
  subTotal   Decimal @map("sub_total") @db.Decimal(12, 2)
  taxAmount  Decimal @map("tax_amount") @db.Decimal(12, 2)
  grandTotal Decimal @map("grand_total") @db.Decimal(12, 2)
  amountPaid Decimal @default(0) @map("amount_paid") @db.Decimal(12, 2)
  balanceDue Decimal @map("balance_due") @db.Decimal(12, 2)

  // Additional fields
  footerNote String? @map("footer_note") @db.Text

  // Status tracking
  sentAt DateTime? @map("sent_at")
  paidAt DateTime? @map("paid_at")

  // System
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  items    InvoiceItem[]
  payments Payment[]

  // Constraints & Indexes
  @@unique([userId, invoiceNumber])
  @@index([userId, status, dueDate])
  @@index([userId, createdAt(sort: Desc)])
  @@index([clientId, status])
  @@map("invoice")
}

model InvoiceItem {
  id        String  @id @default(uuid()) @db.Uuid
  invoiceId String  @map("invoice_id") @db.Uuid
  invoice   Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)

  name        String  @db.VarChar(100)
  description String? @db.VarChar(255)

  unitPrice Decimal @map("unit_price") @db.Decimal(12, 2)
  quantity  Decimal @db.Decimal(10, 3)

  taxRate   Decimal? @map("tax_rate") @db.Decimal(5, 4)
  taxAmount Decimal? @map("tax_amount") @db.Decimal(12, 2)

  totalAmount Decimal @map("total_amount") @db.Decimal(12, 2)

  // System 
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([invoiceId])
  @@map("invoice_item")
}

model Payment {
  id        String  @id @default(uuid()) @db.Uuid
  userId    String  @map("user_id")
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  invoiceId String  @map("invoice_id") @db.Uuid
  invoice   Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)

  amount Decimal @db.Decimal(12, 2)

  method PaymentMethod

  provider PaymentProvider

  description String? @db.Text

  // System
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([userId, createdAt(sort: Desc)])
  @@index([invoiceId])
  @@map("payment")
}

model Activity {
  id     String @id @default(uuid()) @db.Uuid
  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Activity Details
  type        ActivityType
  title       String           @db.VarChar(200)
  description String?          @db.Text
  priority    ActivityPriority @default(MEDIUM)

  resourceType String? @map("resource_type") @db.VarChar(20) // "invoice", "client", "payment"
  resourceId   String? @map("resource_id") @db.Uuid

  // System
  createdAt DateTime @default(now()) @map("created_at")

  @@index([userId, createdAt(sort: Desc)])
  @@index([userId, type, createdAt(sort: Desc)])
  @@index([resourceType, resourceId])
  @@map("activity")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
